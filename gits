#!/usr/local/bin/python3
import argparse
import subprocess as cmd

# ! To use this script you need to have the following installed:
# * - python3
# * - argparse

parser = argparse.ArgumentParser(description="Ez git push and setup")

parser.add_argument("message", help="Commit message", nargs="*")
parser.add_argument("-s", "--setup", help="Setup git, provide git repo to setup", nargs=1)
parser.add_argument("-r", "--revert", help="Revert to a previous commit", action="store_true")
parser.add_argument("-l", "--local", help="Commit locally", action="store_true")

args = parser.parse_args()

if args.revert:
    cmd.run(["git", "reset", "--hard"])
    quit()
    
if args.local:
    message = ""
    for arg in args.message:
        message += arg + " "
    
    cmd.run(["git", "add", "."])
    cmd.run(["git", "commit", "-m", message])
    
    quit()

if args.setup:
    cmd.run(["git", "init"])
    cmd.run(["git", "add", "."])
    cmd.run(["git", "commit", "-m", "Initial commit"])
    cmd.run(["git", "branch", "-M", "main"])
    cmd.run(["git", "remote", "add", "origin", args.setup[0]])
    cmd.run(["git", "push", "-u", "origin", "main"])
    
    quit()

elif args.message:
    message = ""
    for arg in args.message:
        message += arg + " "

    cmd.run(["git", "add", "."])
    cmd.run(["git", "commit", "-m", message])
    cmd.run(["git", "push"])
    
    quit()

else:
    print("Usage: gits <message> [-s <git-repo>] [-r (revert to previous commit)]")
    quit()